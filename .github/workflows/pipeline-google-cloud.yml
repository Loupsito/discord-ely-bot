name: Deploy to GKE

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v0.4.0
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          install_components: 'gke-gcloud-auth-plugin'

      - name: 'Use gcloud CLI'
        run: 'gcloud info'

      - name: Configure Docker
        run: gcloud auth configure-docker eu.gcr.io

      - name: Build and push Docker image
        run: |
          docker build -t eu.gcr.io/${{ secrets.GCP_PROJECT_ID }}/bot-discord:latest .
          docker push eu.gcr.io/${{ secrets.GCP_PROJECT_ID }}/bot-discord:latest

      - name: Configure kubectl
        run: |
          gcloud container clusters get-credentials ${{ secrets.GKE_CLUSTER }} --zone ${{ secrets.GKE_ZONE }} --project ${{ secrets.GCP_PROJECT_ID }}

      - name: Configure Kubernetes secret
        run: |
          kubectl delete secret discord-bot-secret --ignore-not-found
          kubectl create secret generic discord-bot-secret \
            --from-literal=DISCORD_TOKEN=${{ secrets.DISCORD_TOKEN }}
        env:
          KUBECONFIG: ${{ secrets.KUBECONFIG }}

      - name: Create or update Kubernetes ConfigMap
        run: |
          kubectl delete configmap discord-bot-config  --ignore-not-found
          kubectl create configmap discord-bot-config \
            --from-literal=NO_COLOR=${{ env.NO_COLOR }} --dry-run=client -o yaml | kubectl apply -f -
        env:
          NO_COLOR: ${{ env.NO_COLOR }}


      - name: Deploy to GKE
        run: |
          kubectl apply -f deployment/deployment.yaml
          kubectl rollout restart deployment discord-bot-deployment
        env:
          KUBECONFIG: ${{ secrets.KUBECONFIG }}
